<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="DR-GW" targetNamespace="DR-GW"
  elementFormDefault="qualified" attributeFormDefault="qualified">
  <!-- *************************************************************** -->
  <xs:include schemaLocation="../Types/DR-GW.types.xsd"/>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeTetraCallId">
    <xs:annotation>
      <xs:documentation>TETRA callId, generated by the TCS. In the TCS-API it is defined as long,
        but Airbus doesn't have it under control if it can only be unsigned, therefore modified to
        string in DR-GW.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeSelectionLevel">
    <xs:annotation>
      <xs:documentation>Defines how the target is monitored.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="no">
        <xs:annotation>
          <xs:documentation>No selection. Used to remove selection. </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="event">
        <xs:annotation>
          <xs:documentation>Event monitoring.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="audio">
        <xs:annotation>
          <xs:documentation>Audio monitoring.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="use">
        <xs:annotation>
          <xs:documentation>Selection level use.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="a_use">
        <xs:annotation>
          <xs:documentation>Selection level active use.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:complexType name="typeSelection">
    <xs:annotation>
      <xs:documentation/>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="level" type="typeSelectionLevel"/>
      <xs:element name="target" type="typeAddress"/>
    </xs:sequence>
  </xs:complexType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeActionRequest">
    <xs:annotation>
      <xs:documentation>All possible call actions.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="setup">
        <xs:annotation>
          <xs:documentation>This method is used to initiate a new call setup. For a call setup to be
            successful it is required that the resources have been reserved prior this method
            call.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="connect">
        <xs:annotation>
          <xs:documentation>This method is used to connect an incoming call.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="hold">
        <xs:annotation>
          <xs:documentation>This method requests to put an individual call to
            hold.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="unhold">
        <xs:annotation>
          <xs:documentation>This method is a request for resuming an individual call from
            hold.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="disconnect">
        <xs:annotation>
          <xs:documentation>This method is used to disconnect a call.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="transfer">
        <xs:annotation>
          <xs:documentation>This method is used to transfer an individual call to a new
            recipient.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="releasecall">
        <xs:annotation>
          <xs:documentation>This method is used to release radio subscriber’s individual
            call.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeActionEvent">
    <xs:annotation>
      <xs:documentation>All possible call actions.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="incoming">
        <xs:annotation>
          <xs:documentation>This event fired when there is an incoming call. This is the first
            indication of a new incoming call. </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="connected">
        <xs:annotation>
          <xs:documentation>This event is used to inform that call has been connected and call setup
            is finished. </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="held">
        <xs:annotation>
          <xs:documentation>This event is used to inform TCS Client that individual call was put to
            hold. </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="resumed">
        <xs:annotation>
          <xs:documentation>This event is used to inform that individual call has been taken from
            hold. </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="disconnected">
        <xs:annotation>
          <xs:documentation>This event is used to inform that the call was disconnected.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="transferred">
        <xs:annotation>
          <xs:documentation>This event is a response to transfer method call and indicates the
            result of the request. </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeActionPTTRequest">
    <xs:annotation>
      <xs:documentation>All possible PTT requests.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="demandtx">
        <xs:annotation>
          <xs:documentation>This method can be used to request a speech item for a connected
            call.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ceasetx">
        <xs:annotation>
          <xs:documentation>This method is used to inform the system that the speech item is not
            needed any more.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:complexType name="typeTxGranted">
    <xs:annotation>
      <xs:documentation>This event is used to inform of granted transmission request. This event is
        called when the transmission is granted to client, to another user or the request has been
        queued. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="txGrant" type="typeTxGrant"/>
      <xs:element name="talkingParty" type="typeAddress" minOccurs="0"/>
      <xs:element name="encryption" type="xs:boolean" default="true" minOccurs="0"/>
      <xs:element name="txPriority" type="typeTxPriority" minOccurs="0" default="normal"/>
      <xs:element name="txInterrupt" type="xs:boolean" default="false" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Defines whether previous speaker’s speech item was interrupted by this
            speech item. Valid only when txGrant is granted2another. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="txRepeat" type="xs:unsignedLong" minOccurs="0" default="0">
        <xs:annotation>
          <xs:documentation>Timer to repeat the PTT. Units are seconds. Always suggested by the
            DF-gateway. Only valid when txGrant=granted. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="workstationId" type="xs:normalizedString" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Id of the currently speaking workstation, used for "neighbours" feature.
            Only valid when txGrant=granted and when supplied by the DF-client in PTT request.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeTxGrant">
    <xs:annotation>
      <xs:documentation>Defines to whom speech item was granted.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="granted"/>
      <xs:enumeration value="notGranted"/>
      <xs:enumeration value="queued"/>
      <xs:enumeration value="granted2another"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeTxPriority">
    <xs:annotation>
      <xs:documentation>Defines the priority of the transmission. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="normal"/>
      <xs:enumeration value="emergency"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:complexType name="typeDisconnectCause">
    <xs:sequence>
      <xs:element name="protocol">
        <xs:simpleType>
          <xs:restriction base="xs:normalizedString">
            <xs:enumeration value="DR-GW"/>
            <xs:enumeration value="TCS-API"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="code" type="xs:unsignedInt">
        <xs:annotation>
          <xs:documentation>Value according to DR-GW-Reason header in DR-GW-Interface specification.
            It should only be present if action is "disconnected" and holds the reason for call
            disconnection. </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="text" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Optional textual representation of the cause. </xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:normalizedString">
            <xs:maxLength value="80"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="typeWorkstationId">
    <xs:annotation>
      <xs:documentation>Optional parameter is used to support the "neighbours" feature.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString"/>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:complexType name="typeCallAttributes">
    <xs:annotation>
      <xs:documentation>Contains all attributes of the TETRA voice call. </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="hook" type="xs:boolean" minOccurs="0"/>
      <xs:element name="mode" type="typeCallMode" minOccurs="0"/>
      <xs:element name="commtype" type="typeCallType" minOccurs="0"/>
      <xs:element name="priority" type="xs:unsignedByte" default="1" minOccurs="0"/>
      <xs:element name="encryption" type="xs:boolean" default="true" minOccurs="0"/>
      <xs:element name="ambienceListen" type="xs:boolean" default="0" minOccurs="0"/>
      <xs:element name="req2speak" type="xs:boolean" default="1" minOccurs="0"/>
      <xs:element name="demandPriority" type="typeTxDemandPriority" default="normal" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeCallMode">
    <xs:annotation>
      <xs:documentation>Call mode attribute. Choices are simplex or duplex. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="simplex"/>
      <xs:enumeration value="duplex"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeCallType">
    <xs:annotation>
      <xs:documentation>Call type attribute. Choices are Point2Point, Point2MultiPoint or Broadcast.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="p2p"/>
      <xs:enumeration value="p2mp"/>
      <xs:enumeration value="bcast"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeTxDemandPriority">
    <xs:annotation>
      <xs:documentation>Defines priority of speech item request: normal, pre-emptive, or emergency.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="normal"/>
      <xs:enumeration value="preemptive"/>
      <xs:enumeration value="emergency"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeUnitInEmergencyType">
    <xs:annotation>
      <xs:documentation>Defines type of the subscriber. Refer to type tcsCallSubscriberType_t of the
        TCS-API. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="dummy"/>
      <xs:enumeration value="ms"/>
      <xs:enumeration value="g4wif"/>
      <xs:enumeration value="external"/>
      <xs:enumeration value="ws"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- *********************************************************************** -->
  <xs:simpleType name="typeEmergencyInfo">
    <xs:annotation>
      <xs:documentation>Defines action taken by user in emergency. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="addTx"/>
      <xs:enumeration value="add"/>
      <xs:enumeration value="ceased"/>
      <xs:enumeration value="demandTx"/>
      <xs:enumeration value="removed"/>
      <xs:enumeration value="emergencyCallDisconnected"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- *********************************************************************** -->
  <xs:simpleType name="typeKeyExchangeAction">
    <xs:annotation>
      <xs:documentation> Action type for key exchange request.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="start"/>
      <xs:enumeration value="stop"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeKeyExchangeState">
    <xs:annotation>
      <xs:documentation>Represents current key state.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="keyValid">
        <xs:annotation>
          <xs:documentation> current key is valid, no user action required. </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="keyInvalid">
        <xs:annotation>
          <xs:documentation>Key invalid, user must request key exchange. </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="keyExchangeInProgress">
        <xs:annotation>
          <xs:documentation>Key exchange in progress, user may abort exchange or wait until it gets
            finished. </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeKeyExchangeCode">
    <xs:annotation>
      <xs:documentation>See "Table 5.3: Status words of the commands" of the E-to-E Encryption
        SIM-ME Interface (Version 4.0.5) for all possible code values. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:hexBinary">
      <xs:length value="2"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeKeyExchangeText">
    <xs:annotation>
      <xs:documentation>The textual information supplied by the BOS-simcard and sent from the
        DF-Gateway to the DF-client. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:maxLength value="100"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeKeyExchangeTextPriority">
    <xs:annotation>
      <xs:documentation>Defines the priority of the KeyExchange information. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="normal"/>
      <xs:enumeration value="high"/>
    </xs:restriction>
  </xs:simpleType>
  <!-- *************************************************************** -->
  <xs:simpleType name="typeKeyManagementTextPriority">
    <xs:annotation>
      <xs:documentation>Defines the priority of the keymanagement information. </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:normalizedString">
      <xs:enumeration value="normal"/>
      <xs:enumeration value="high"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
